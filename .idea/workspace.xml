<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="8c70382f-f426-414f-b8c8-f8c7752e74f9" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/app.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/hero/domaine/hero.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/hero/domaine/hero.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="tsconfig.json" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProjectId" id="2GwMTuaSS6sb4VuRqid5llfUABb" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;code.cleanup.on.save&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/nathanletourneau/Documents/cours/cours_4/Clean-code-heroes&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;/Users/nathanletourneau/Documents/cours/cours_4/Clean-code-heroes/node_modules/jest&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;/Users/nathanletourneau/Documents/cours/cours_4/Clean-code-heroes/node_modules/prettier&quot;,
    &quot;rearrange.code.on.save&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;actions.on.save&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/nathanletourneau/Documents/cours/cours_4/Clean-code-heroes/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/hero/exposition/controller" />
      <recent name="$PROJECT_DIR$/src/hero/application" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.HeroService.should update hero with id 1">
    <configuration name="HeroService" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/hero/application/hero.service.spec.ts" />
      <test-names>
        <test-name value="HeroService" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="HeroService.should be find hero with id 0" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/hero/application/hero.service.spec.ts" />
      <test-names>
        <test-name value="HeroService" />
        <test-name value="should be find hero with id 0" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="HeroService.should be return all hero" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/hero/application/hero.service.spec.ts" />
      <test-names>
        <test-name value="HeroService" />
        <test-name value="should be return all hero" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="HeroService.should delete hero with id 0" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/hero/application/hero.service.spec.ts" />
      <test-names>
        <test-name value="HeroService" />
        <test-name value="should delete hero with id 0" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="HeroService.should update hero with id 1" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/hero/application/hero.service.spec.ts" />
      <test-names>
        <test-name value="HeroService" />
        <test-name value="should update hero with id 1" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.HeroService.should update hero with id 1" />
        <item itemvalue="Jest.HeroService" />
        <item itemvalue="Jest.HeroService.should delete hero with id 0" />
        <item itemvalue="Jest.HeroService.should be find hero with id 0" />
        <item itemvalue="Jest.HeroService.should be return all hero" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8c70382f-f426-414f-b8c8-f8c7752e74f9" name="Changes" comment="" />
      <created>1667295206588</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1667295206588</updated>
      <workItem from="1667295209901" duration="44000" />
      <workItem from="1667295259193" duration="181000" />
      <workItem from="1667295461625" duration="3650000" />
      <workItem from="1667466058722" duration="3696000" />
      <workItem from="1667554469323" duration="9210000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>